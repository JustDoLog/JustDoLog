version: '3.8'
name: justdolog-prod

networks:
  app-tier:
    driver: bridge

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - 8000
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3
    networks:
      - app-tier
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-tier

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - web
    networks:
      - app-tier

  minio:
    image: 'bitnami/minio:latest'
    expose:
      - 9000
      - 9001
    volumes:
      - minio_data:/data
    env_file:
      - .env
    environment:
      - MINIO_DEFAULT_BUCKETS=${MINIO_BUCKET_NAME:-justdolog-media}:public
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-tier

volumes:
  postgres_data:
  minio_data:
  static_volume:
  media_volume: 