name: justdolog-prod

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    expose:
      - 8000
    env_file:
      - .env
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - justdolog_net

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --locale=C
    command: postgres -c shared_preload_libraries=pg_trgm
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - justdolog_net

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - justdolog_net

  minio:
    image: minio/minio:latest
    volumes:
      - minio_data:/data
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ADDRESS: ":9000"
      MINIO_CONSOLE_ADDRESS: ":9001"
      MINIO_DOMAIN: "localhost"
    command: server --address ":9000" --console-address ":9001" /data
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - justdolog_net

networks:
  justdolog_net:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
  minio_data: 